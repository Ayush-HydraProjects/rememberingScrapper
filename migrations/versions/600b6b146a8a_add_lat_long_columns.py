"""Add lat long columns

Revision ID: 600b6b146a8a
Revises: 3c60d2e0a630
Create Date: 2025-03-20 11:28:59.606751

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '600b6b146a8a'
down_revision = '3c60d2e0a630'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('dist_obituary', schema=None) as batch_op:
        batch_op.add_column(sa.Column('latitude', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('longitude', sa.Float(), nullable=True))
        batch_op.alter_column('tags',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)

    with op.batch_alter_table('obituary', schema=None) as batch_op:
        batch_op.add_column(sa.Column('latitude', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('longitude', sa.Float(), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('city',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('province',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('publication_date',
               existing_type=sa.VARCHAR(length=50), # Assuming it's VARCHAR
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               postgresql_using='publication_date::timestamp with time zone') # ADD THE USING CLAUSE HERE!
        batch_op.alter_column('obituary_url',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('obituary', schema=None) as batch_op:
        batch_op.alter_column('obituary_url',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('publication_date',
               existing_type=sa.VARCHAR(length=50), # Assuming it's VARCHAR
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               postgresql_using='publication_date::timestamp with time zone') # ADD THE USING CLAUSE HERE!
        batch_op.alter_column('province',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('city',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
        batch_op.drop_column('longitude')
        batch_op.drop_column('latitude')

    with op.batch_alter_table('dist_obituary', schema=None) as batch_op:
        batch_op.alter_column('tags',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.drop_column('longitude')
        batch_op.drop_column('latitude')

    # ### end Alembic commands ###
